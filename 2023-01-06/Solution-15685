import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        int answer = 0;
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        boolean[][] graph = new boolean[101][101];
        for (int i = 0; i < n; i++) {
            int[] input = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::parseInt).toArray();
            int x = input[0];
            int y = input[1];
            int direction = input[2];
            int g = input[3];
            int verticalX = 0;
            int verticalY = 0;
            int[][] start = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};
            ArrayList<String> list = new ArrayList<>();
            graph[x][y] = true;
            list.add(x + "," + y);
            for (int k = 0; k < 4; k++) {
                if (k == direction) {
                    verticalX = x + start[k][0];
                    verticalY = y + start[k][1];
                    list.add(verticalX + "," + verticalY);
                    graph[verticalX][verticalY] = true;
                }
            }
            for (int j = 0; j < g; j++) {
                ArrayList<String> box = new ArrayList<>();
                for (String str : list) {
                    int[] arr = Arrays.stream(str.split(",")).mapToInt(Integer::parseInt).toArray();
                    int xGap = verticalX - arr[0];
                    int yGap = verticalY - arr[1];
                    int newX = verticalX + yGap;
                    int newY = verticalY - xGap;
                    String dot = newX + "," + newY;
                    if (!list.contains(dot)) {
                        box.add(dot);
                        if (newX < 101 && newY < 101) {
                            graph[newX][newY] = true;// 1.
                        }
                    }
                }
                list.addAll(box);
                // 꼭지점 정해주기
                verticalX = verticalX + verticalY - y;
                verticalY = verticalY - verticalX + x;
            }
        }
        //사각형 찾기
        for (int i = 0; i < 100; i++) {
            for (int j = 0; j < 100; j++) {
                if (graph[i][j] && graph[i + 1][j] && graph[i][j + 1] && graph[i + 1][j + 1]) {
                    answer++;
                }
            }
        }
        System.out.println(answer);
    }
}
